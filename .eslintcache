[{"D:\\Yura\\it-incubator\\IT-INCUBATOR 2.0\\todolist-2.0\\src\\AddItemForm.stories.tsx":"1","D:\\Yura\\it-incubator\\IT-INCUBATOR 2.0\\todolist-2.0\\src\\stories\\Header.tsx":"2","D:\\Yura\\it-incubator\\IT-INCUBATOR 2.0\\todolist-2.0\\src\\AddItemForm.tsx":"3","D:\\Yura\\it-incubator\\IT-INCUBATOR 2.0\\todolist-2.0\\src\\stories\\Header.stories.tsx":"4","D:\\Yura\\it-incubator\\IT-INCUBATOR 2.0\\todolist-2.0\\src\\stories\\Page.stories.tsx":"5","D:\\Yura\\it-incubator\\IT-INCUBATOR 2.0\\todolist-2.0\\src\\stories\\Button.tsx":"6"},{"size":425,"mtime":1619948728711,"results":"7","hashOfConfig":"8"},{"size":1356,"mtime":499162500000,"results":"9","hashOfConfig":"8"},{"size":1474,"mtime":1594727720000,"results":"10","hashOfConfig":"8"},{"size":414,"mtime":499162500000,"results":"11","hashOfConfig":"8"},{"size":509,"mtime":499162500000,"results":"12","hashOfConfig":"8"},{"size":941,"mtime":499162500000,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ffwtx4",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Yura\\it-incubator\\IT-INCUBATOR 2.0\\todolist-2.0\\src\\AddItemForm.stories.tsx",[],"D:\\Yura\\it-incubator\\IT-INCUBATOR 2.0\\todolist-2.0\\src\\stories\\Header.tsx",[],"D:\\Yura\\it-incubator\\IT-INCUBATOR 2.0\\todolist-2.0\\src\\AddItemForm.tsx",["28","29","30"],"import React, {ChangeEvent, KeyboardEvent, useState} from 'react';\r\nimport {Box, Button, FormControl, IconButton, TextField} from '@material-ui/core';\r\nimport {AddBox} from '@material-ui/icons';\r\n\r\ntype AddItemFormPropsType = {\r\n    addItem: (title: string) => void\r\n}\r\n\r\nexport const AddItemForm = React.memo(function(props: AddItemFormPropsType) {\r\n    console.log(\"AddItemForm called\")\r\n\r\n    let [title, setTitle] = useState(\"\")\r\n    let [error, setError] = useState<string | null>(null)\r\n\r\n    const addItem = () => {\r\n        if (title.trim() !== \"\") {\r\n            props.addItem(title);\r\n            setTitle(\"\");\r\n        } else {\r\n            setError(\"Title is required\");\r\n        }\r\n    }\r\n\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setTitle(e.currentTarget.value)\r\n    }\r\n\r\n    const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (error !== null) {\r\n            setError(null);\r\n        }\r\n        if (e.charCode === 13) {\r\n            addItem();\r\n        }\r\n    }\r\n\r\n    return <div>\r\n        <TextField variant=\"outlined\"\r\n                   error={!!error}\r\n                   value={title}\r\n                   onChange={onChangeHandler}\r\n                   onKeyPress={onKeyPressHandler}\r\n                   label=\"Title\"\r\n                   helperText={error}\r\n        />\r\n        <IconButton color=\"primary\" onClick={addItem}>\r\n            <AddBox />\r\n        </IconButton>\r\n    </div>\r\n})\r\n",["31","32"],"D:\\Yura\\it-incubator\\IT-INCUBATOR 2.0\\todolist-2.0\\src\\stories\\Header.stories.tsx",[],"D:\\Yura\\it-incubator\\IT-INCUBATOR 2.0\\todolist-2.0\\src\\stories\\Page.stories.tsx",[],"D:\\Yura\\it-incubator\\IT-INCUBATOR 2.0\\todolist-2.0\\src\\stories\\Button.tsx",[],{"ruleId":"33","severity":1,"message":"34","line":2,"column":9,"nodeType":"35","messageId":"36","endLine":2,"endColumn":12},{"ruleId":"33","severity":1,"message":"37","line":2,"column":14,"nodeType":"35","messageId":"36","endLine":2,"endColumn":20},{"ruleId":"33","severity":1,"message":"38","line":2,"column":22,"nodeType":"35","messageId":"36","endLine":2,"endColumn":33},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},"@typescript-eslint/no-unused-vars","'Box' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'FormControl' is defined but never used.","no-native-reassign",["43"],"no-negated-in-lhs",["44"],"no-global-assign","no-unsafe-negation"]